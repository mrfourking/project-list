{"version":3,"sources":["components/button/button.js","icons/edit.svg","icons/delete.svg","icons/x-mark.svg","icons/save.svg","components/editable-field/editable-field.js","icons/plus.svg","components/task-list/task-list.js","components/project-list/project-list.js","App.js","reportWebVitals.js","index.js"],"names":["Button","this","props","onClick","className","dataType","children","type","React","Component","EditableField","state","currentProject","editable","item","projects","EditableSpan","createRef","onCLickEditField","bind","onClickDelete","onClickSave","onClickCancel","onClickSaveTask","id","isNaN","newCurrentProject","filter","setState","updateCurrentProject","isNotId","updatedTasks","tasks","Object","assign","newIndex","findIndex","some","tmpProjects","splice","updateProjects","updatedProjects","current","textContent","title","focus","newTitle","newIndexTask","tmpTasks","console","log","isTask","contentEditable","suppressContentEditableWarning","ref","onCLickShowTasks","src","Save","width","height","Cancel","Edit","Delete","TaskList","addTask","newTask","list","maxID","length","forEach","Number","split","pop","newTaskList","push","map","Plus","ProjectList","addProject","newProject","newProjectList","projectsList","App","_isStorageSupport","value","localStorage","setItem","JSON","stringify","storageProjects","getItem","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06b929f9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Button extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      onClick,\r\n      className,\r\n      dataType,\r\n      children\r\n    } = this.props;\r\n\r\n    return (\r\n      <button\r\n        onClick={onClick}\r\n        className={'button ' + className}\r\n        type='button'\r\n        data-type={dataType}\r\n      >\r\n        {children}\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button;","export default __webpack_public_path__ + \"static/media/edit.1610f3fa.svg\";","export default __webpack_public_path__ + \"static/media/delete.e4efcb06.svg\";","export default __webpack_public_path__ + \"static/media/x-mark.ae506d6c.svg\";","export default __webpack_public_path__ + \"static/media/save.23c9fb9b.svg\";","import Button from \"../button/button\";\r\nimport React from \"react\";\r\nimport Edit from '../../icons/edit.svg'\r\nimport Delete from '../../icons/delete.svg'\r\nimport Cancel from '../../icons/x-mark.svg'\r\nimport Save from '../../icons/save.svg'\r\n\r\nclass EditableField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentProject: null,\r\n      editable: false,\r\n      item: null,\r\n      projects: null\r\n    }\r\n\r\n    this.EditableSpan = React.createRef();\r\n\r\n    this.onCLickEditField = this.onCLickEditField.bind(this);\r\n    this.onClickDelete = this.onClickDelete.bind(this);\r\n    this.onClickSave = this.onClickSave.bind(this);\r\n    this.onClickCancel = this.onClickCancel.bind(this);\r\n    this.onClickSaveTask = this.onClickSaveTask.bind(this);\r\n  }\r\n\r\n  onCLickShowTasks(id) {\r\n    if (!isNaN(this.props.item.id)) {\r\n      const isID = item => item.id === id;\r\n      const newCurrentProject = this.props.projects.filter(isID);\r\n      this.setState({ currentProject: newCurrentProject[0] }, () => {\r\n        this.props.updateCurrentProject(this.state.currentProject);\r\n      });\r\n    }\r\n  };\r\n\r\n  onClickDelete() {\r\n    const isNotId = item => item.id !== this.props.item.id;\r\n\r\n    if (isNaN(this.props.item.id)) {\r\n      const updatedTasks = this.props.currentProject.tasks.filter(isNotId);\r\n\r\n\r\n      let newCurrentProject = Object.assign({}, this.props.currentProject);\r\n      newCurrentProject.tasks = updatedTasks;\r\n      this.setState({ currentProject: newCurrentProject }, () => {\r\n        this.props.updateCurrentProject(this.state.currentProject);\r\n      })\r\n\r\n      let newIndex = this.props.projects.findIndex(some => some.id === newCurrentProject.id);\r\n      let tmpProjects = this.props.projects;\r\n      tmpProjects.splice(newIndex, 1, newCurrentProject);\r\n      this.props.updateProjects(tmpProjects)\r\n    } else {\r\n      const updatedProjects = this.props.projects.filter(isNotId);\r\n\r\n      if (this.props.currentProject && this.props.item.id === this.props.currentProject.id) {\r\n        this.setState({ currentProject: null }, () => {\r\n          this.props.updateCurrentProject(this.state.currentProject);\r\n        })\r\n      }\r\n\r\n      this.setState({ projects: updatedProjects }, () => {\r\n        this.props.updateProjects(updatedProjects)\r\n      });\r\n    }\r\n  }\r\n\r\n  onClickCancel() {\r\n    this.setState({ editable: false });\r\n    this.EditableSpan.current.textContent = this.props.item.title;\r\n  }\r\n\r\n  onCLickEditField() {\r\n    this.setState({ editable: true }, () => {\r\n      this.EditableSpan.current.focus();\r\n    });\r\n  }\r\n\r\n  onClickSave() {\r\n    this.setState({ editable: false });\r\n    let newTitle = { title: this.EditableSpan.current.textContent };\r\n    this.setState({\r\n      item: {\r\n        ...this.props.item, ...newTitle\r\n      }\r\n    }, () => {\r\n      let newIndex = this.props.projects.findIndex(some => some.id === this.state.item.id);\r\n      let tmpProjects = this.props.projects;\r\n      tmpProjects.splice(newIndex, 1, this.state.item);\r\n      this.props.updateProjects(tmpProjects)\r\n      if (this.props.currentProject && this.props.currentProject.id === this.state.item.id) {\r\n        this.props.updateCurrentProject(this.state.item)\r\n      }\r\n    });\r\n  }\r\n\r\n  onClickSaveTask() {\r\n    this.setState({ editable: false });\r\n    let newTitle = { title: this.EditableSpan.current.textContent };\r\n    this.setState({\r\n      item: {\r\n        ...this.props.item, ...newTitle\r\n      }\r\n    }, () => {\r\n      let newIndexTask = this.props.currentProject.tasks.findIndex(some => some.id === this.state.item.id);\r\n      let tmpTasks = this.props.currentProject.tasks;\r\n      tmpTasks.splice(newIndexTask, 1, this.state.item);\r\n\r\n      const newCurrentProject = this.props.currentProject;\r\n      newCurrentProject.tasks = tmpTasks;\r\n      console.log(newCurrentProject);\r\n      this.props.updateCurrentProject(newCurrentProject);\r\n\r\n      let newIndex = this.props.projects.findIndex(some => some.id === this.props.currentProject.id);\r\n      let tmpProjects = this.props.projects;\r\n      tmpProjects.splice(newIndex, 1, newCurrentProject);\r\n      this.props.updateProjects(tmpProjects)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      item,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div\r\n        key={item.id}\r\n        className='editable-field'\r\n      >\r\n        {\r\n          this.props.isTask\r\n            ? <span\r\n              contentEditable={this.state.editable}\r\n              className='editable-field__name editable-field__name--no-pointer'\r\n              suppressContentEditableWarning={true}\r\n              ref={this.EditableSpan}\r\n            >\r\n              {item.title}\r\n            </span>\r\n            : <span\r\n              contentEditable={this.state.editable}\r\n              className='editable-field__name'\r\n              suppressContentEditableWarning={true}\r\n              onClick={() => this.onCLickShowTasks(item.id)}\r\n              ref={this.EditableSpan}\r\n            >\r\n              {item.title}\r\n            </span>\r\n        }\r\n        {\r\n          this.state.editable ? (\r\n            <>\r\n              {\r\n                this.props.isTask\r\n                  ? <Button\r\n                    onClick={this.onClickSaveTask}\r\n                    editable={this.state.editable}\r\n                  >\r\n                    <img src={Save} width='20' height='20'></img>\r\n                  </Button>\r\n                  : <Button\r\n                    onClick={this.onClickSave}\r\n                    editable={this.state.editable}\r\n                  >\r\n                    <img src={Save} width='20' height='20'></img>\r\n                  </Button>\r\n              }\r\n              <Button\r\n                onClick={this.onClickCancel}\r\n              >\r\n                <img src={Cancel} width='20' height='20'></img>\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Button\r\n                onClick={this.onCLickEditField}\r\n                editable={this.state.editable}\r\n              >\r\n                <img src={Edit} width='20' height='20'></img>\r\n              </Button>\r\n              <Button\r\n                onClick={this.onClickDelete}\r\n              >\r\n                <img src={Delete} width='20' height='20'></img>\r\n              </Button>\r\n            </>\r\n          )\r\n        }\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditableField;\r\n","export default __webpack_public_path__ + \"static/media/plus.89fe7bf6.svg\";","import React from \"react\";\r\nimport EditableField from \"../editable-field/editable-field\";\r\nimport Button from \"../button/button\";\r\nimport Plus from '../../icons/plus.svg';\r\n\r\nclass TaskList extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.addTask = this.addTask.bind(this);\r\n  }\r\n\r\n  addTask() {\r\n    let newTask = Object.assign({}, this.props.list.tasks[0]);\r\n\r\n    let maxID = 0;\r\n\r\n    this.props.list.tasks.length > 0 &&\r\n      this.props.list.tasks.forEach(item => {\r\n        if (Number(item.id.split('t').pop()) > maxID) {\r\n          maxID = Number(item.id.split('t').pop());\r\n        }\r\n      });\r\n\r\n    newTask.id = 't' + (maxID + 1);\r\n    newTask.title = 'Новая задача';\r\n\r\n    let newTaskList = this.props.list.tasks\r\n\r\n    newTaskList.push(newTask);\r\n    console.log(newTaskList);\r\n\r\n    const newCurrentProject = this.props.list;\r\n    newCurrentProject.tasks = newTaskList;\r\n    console.log(newCurrentProject);\r\n    this.props.updateCurrentProject(newCurrentProject);\r\n\r\n    let newIndex = this.props.projects.findIndex(some => some.id === this.props.list.id);\r\n    let tmpProjects = this.props.projects;\r\n    tmpProjects.splice(newIndex, 1, newCurrentProject);\r\n    this.props.updateProjects(tmpProjects)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      list,\r\n      projects\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"task-list\">\r\n        <h2 className=\"task-list__title\">Задачи по проекту - {list.title}</h2>\r\n        {list.tasks.map(item =>\r\n          <EditableField\r\n            item={item}\r\n            key={item.id}\r\n            currentProject={list}\r\n            projects={projects}\r\n            updateCurrentProject={this.props.updateCurrentProject}\r\n            updateProjects={this.props.updateProjects}\r\n            isTask={true}\r\n          />\r\n        )}\r\n        <Button\r\n          className=\"task-list__add-btn\"\r\n          onClick={this.addTask}\r\n        >\r\n          <img src={Plus} width='30' height='30'></img>\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskList;","import Button from \"../button/button\";\r\nimport TaskList from \"../task-list/task-list\";\r\nimport React from \"react\";\r\nimport EditableField from \"../editable-field/editable-field\";\r\nimport Plus from '../../icons/plus.svg';\r\n\r\nclass ProjectList extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projects: null\r\n    };\r\n\r\n    this.addProject = this.addProject.bind(this);\r\n  }\r\n\r\n  addProject() {\r\n    let newProject = Object.assign({}, this.props.projects[0]);\r\n\r\n    let maxID = 0;\r\n\r\n    this.props.projects.forEach(item => {\r\n      if (item.id > maxID) {\r\n        maxID = item.id;\r\n      }\r\n    });\r\n\r\n    newProject.id = maxID + 1;\r\n    newProject.title = 'Новый проект';\r\n    newProject.tasks = [];\r\n\r\n    let newProjectList = this.props.projects\r\n\r\n    newProjectList.push(newProject);\r\n\r\n    this.setState({ projects: newProjectList }, () => {\r\n      console.log(this.state.projects);\r\n      this.props.updateProjects(this.state.projects);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentProject,\r\n      projects,\r\n    } = this.props;\r\n\r\n    return (\r\n      <section className='project-list'>\r\n        <div className='project-list__header'>\r\n          <h1 className='project-list__title'>Список проектов</h1>\r\n        </div>\r\n        <div className='project-list__list'>\r\n          <div className=\"project-list__wrapper\">\r\n            {\r\n              projects.map(item =>\r\n                <EditableField\r\n                  item={item}\r\n                  key={item.id}\r\n                  projects={projects}\r\n                  currentProject={currentProject}\r\n                  updateCurrentProject={this.props.updateCurrentProject}\r\n                  updateProjects={this.props.updateProjects}\r\n                />\r\n              )}\r\n          </div>\r\n          <Button\r\n            className=\"project-list__add-btn\"\r\n            onClick={this.addProject}\r\n          >\r\n            <img src={Plus} width='30' height='30'></img>\r\n          </Button>\r\n        </div>\r\n        <div className=\"project-list__tasks\">\r\n          {currentProject\r\n            ? <TaskList\r\n              list={currentProject}\r\n              projects={projects}\r\n              updateCurrentProject={this.props.updateCurrentProject}\r\n              updateProjects={this.props.updateProjects}\r\n            />\r\n            : <p>Создайте или выберите проект</p>\r\n          }\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default ProjectList;","import React from 'react';\nimport ProjectList from './components/project-list/project-list';\nimport './sass/style.scss';\n\nconst projectsList = [\n  {\n    title: 'project1',\n    id: 1,\n    tasks: [\n      {\n        id: 't1',\n        title: 'task11',\n      },\n      {\n        id: 't2',\n        title: 'task12',\n      },\n    ],\n  },\n  {\n    title: 'project2',\n    id: 2,\n    tasks: [\n      {\n        id: 't3',\n        title: 'task21',\n      },\n    ],\n  },\n  {\n    title: 'project3',\n    id: 3,\n    tasks: [],\n  },\n]\n\n\nclass App extends React.Component {\n  _isStorageSupport = true;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentProject: null,\n      projects: projectsList,\n    };\n\n    this.updateCurrentProject = this.updateCurrentProject.bind(this);\n    this.updateProjects = this.updateProjects.bind(this);\n  }\n\n  updateCurrentProject(value) {\n    this.setState({ currentProject: value })\n  }\n\n  updateProjects(value) {\n    this.setState({ projects: value }, () => {\n      localStorage.setItem('projects', JSON.stringify(this.state.projects));\n    })\n  }\n\n  componentDidMount() {\n    let storageProjects;\n\n    try {\n      storageProjects = localStorage.getItem('projects');\n      storageProjects = JSON.parse(storageProjects);\n    } catch {\n      this._isStorageSupport = false;\n    }\n\n    this._isStorageSupport && storageProjects && this.setState({ projects: storageProjects })\n  }\n\n  render() {\n    const {\n      projects\n    } = this.state;\n\n    return (\n      <div className='page'>\n        <ProjectList\n          projects={projects}\n          currentProject={this.state.currentProject}\n          updateCurrentProject={this.updateCurrentProject}\n          updateProjects={this.updateProjects}\n        />\n      </div>\n    )\n  }\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif (module.hot) {\n  module.hot.accept();\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}